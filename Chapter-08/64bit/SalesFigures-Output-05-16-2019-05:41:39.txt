************ FILE TYPE INFORMATION ************

ch08-SalesFigures: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/l, for GNU/Linux 2.6.32, BuildID[sha1]=7db51c1cc796ac5997c604ed358ee4d2471fa9a2, not stripped


************ STRINGS INFORMATION ************

/lib64/ld-linux-x86-64.so.2  |  libc.so.6  |  gets  |  puts  |  putchar  |  printf  |  strcmp  |  __libc_start_main  |  __gmon_start__  |  GLIBC_2.2.5  |  UH-X  |  AWAVA  |  AUATL  |  []A\A]A^A_  |  Hello, and welcome to Chapter 08!  |  Please enter the password to connect:   |  You entered:   |  Password is correct!  |  Month to date sales are as follows.  |  Month		Year		Total Sales  |  January		2018		$140,000  |  February	2018		$235,000  |  March		2018		$193,000  |  April		2018		$225,456  |  May		2018		$130,456  |  June		2018		$213,389  |  July		2018		$238,948  |  August		2018		$234,209  |  September	2018		$132,837  |  October		2018		$237,382  |  November	2018		$281,387  |  December	2018		$228,189  |  Sorry, password incorrect....  |  ;*3$"  |  GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609  |  crtstuff.c  |  __JCR_LIST__  |  deregister_tm_clones  |  __do_global_dtors_aux  |  completed.7594  |  __do_global_dtors_aux_fini_array_entry  |  frame_dummy  |  __frame_dummy_init_array_entry  |  ch08-SalesFigures.c  |  __FRAME_END__  |  __JCR_END__  |  __init_array_end  |  _DYNAMIC  |  __init_array_start  |  __GNU_EH_FRAME_HDR  |  _GLOBAL_OFFSET_TABLE_  |  __libc_csu_fini  |  putchar@@GLIBC_2.2.5  |  _ITM_deregisterTMCloneTable  |  puts@@GLIBC_2.2.5  |  _edata  |  printf@@GLIBC_2.2.5  |  __libc_start_main@@GLIBC_2.2.5  |  __data_start  |  strcmp@@GLIBC_2.2.5  |  __gmon_start__  |  __dso_handle  |  _IO_stdin_used  |  gets@@GLIBC_2.2.5  |  __libc_csu_init  |  __bss_start  |  main  |  _Jv_RegisterClasses  |  __TMC_END__  |  _ITM_registerTMCloneTable  |  .symtab  |  .strtab  |  .shstrtab  |  .interp  |  .note.ABI-tag  |  .note.gnu.build-id  |  .gnu.hash  |  .dynsym  |  .dynstr  |  .gnu.version  |  .gnu.version_r  |  .rela.dyn  |  .rela.plt  |  .init  |  .plt.got  |  .text  |  .fini  |  .rodata  |  .eh_frame_hdr  |  .eh_frame  |  .init_array  |  .fini_array  |  .jcr  |  .dynamic  |  .got.plt  |  .data  |  .bss  |  .comment  |  

************ READELF ALL ************

ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x400550
  Start of program headers:          64 (bytes into file)
  Start of section headers:          6840 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         9
  Size of section headers:           64 (bytes)
  Number of section headers:         31
  Section header string table index: 28

Section Headers:
  [Nr] Name              Type            Address          Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            0000000000000000 000000 000000 00      0   0  0
  [ 1] .interp           PROGBITS        0000000000400238 000238 00001c 00   A  0   0  1
  [ 2] .note.ABI-tag     NOTE            0000000000400254 000254 000020 00   A  0   0  4
  [ 3] .note.gnu.build-id NOTE            0000000000400274 000274 000024 00   A  0   0  4
  [ 4] .gnu.hash         GNU_HASH        0000000000400298 000298 00001c 00   A  5   0  8
  [ 5] .dynsym           DYNSYM          00000000004002b8 0002b8 0000c0 18   A  6   1  8
  [ 6] .dynstr           STRTAB          0000000000400378 000378 000058 00   A  0   0  1
  [ 7] .gnu.version      VERSYM          00000000004003d0 0003d0 000010 02   A  5   0  2
  [ 8] .gnu.version_r    VERNEED         00000000004003e0 0003e0 000020 00   A  6   1  8
  [ 9] .rela.dyn         RELA            0000000000400400 000400 000018 18   A  5   0  8
  [10] .rela.plt         RELA            0000000000400418 000418 000090 18  AI  5  24  8
  [11] .init             PROGBITS        00000000004004a8 0004a8 00001a 00  AX  0   0  4
  [12] .plt              PROGBITS        00000000004004d0 0004d0 000070 10  AX  0   0 16
  [13] .plt.got          PROGBITS        0000000000400540 000540 000008 00  AX  0   0  8
  [14] .text             PROGBITS        0000000000400550 000550 000272 00  AX  0   0 16
  [15] .fini             PROGBITS        00000000004007c4 0007c4 000009 00  AX  0   0  4
  [16] .rodata           PROGBITS        00000000004007d0 0007d0 0001f1 00   A  0   0  8
  [17] .eh_frame_hdr     PROGBITS        00000000004009c4 0009c4 000034 00   A  0   0  4
  [18] .eh_frame         PROGBITS        00000000004009f8 0009f8 0000f4 00   A  0   0  8
  [19] .init_array       INIT_ARRAY      0000000000600e10 000e10 000008 00  WA  0   0  8
  [20] .fini_array       FINI_ARRAY      0000000000600e18 000e18 000008 00  WA  0   0  8
  [21] .jcr              PROGBITS        0000000000600e20 000e20 000008 00  WA  0   0  8
  [22] .dynamic          DYNAMIC         0000000000600e28 000e28 0001d0 10  WA  6   0  8
  [23] .got              PROGBITS        0000000000600ff8 000ff8 000008 08  WA  0   0  8
  [24] .got.plt          PROGBITS        0000000000601000 001000 000048 08  WA  0   0  8
  [25] .data             PROGBITS        0000000000601048 001048 000010 00  WA  0   0  8
  [26] .bss              NOBITS          0000000000601058 001058 000008 00  WA  0   0  1
  [27] .comment          PROGBITS        0000000000000000 001058 000035 01  MS  0   0  1
  [28] .shstrtab         STRTAB          0000000000000000 0019a7 00010c 00      0   0  1
  [29] .symtab           SYMTAB          0000000000000000 001090 0006a8 18     30  47  8
  [30] .strtab           STRTAB          0000000000000000 001738 00026f 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), l (large)
  I (info), L (link order), G (group), T (TLS), E (exclude), x (unknown)
  O (extra OS processing required) o (OS specific), p (processor specific)

There are no section groups in this file.

Program Headers:
  Type           Offset   VirtAddr           PhysAddr           FileSiz  MemSiz   Flg Align
  PHDR           0x000040 0x0000000000400040 0x0000000000400040 0x0001f8 0x0001f8 R E 0x8
  INTERP         0x000238 0x0000000000400238 0x0000000000400238 0x00001c 0x00001c R   0x1
      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]
  LOAD           0x000000 0x0000000000400000 0x0000000000400000 0x000aec 0x000aec R E 0x200000
  LOAD           0x000e10 0x0000000000600e10 0x0000000000600e10 0x000248 0x000250 RW  0x200000
  DYNAMIC        0x000e28 0x0000000000600e28 0x0000000000600e28 0x0001d0 0x0001d0 RW  0x8
  NOTE           0x000254 0x0000000000400254 0x0000000000400254 0x000044 0x000044 R   0x4
  GNU_EH_FRAME   0x0009c4 0x00000000004009c4 0x00000000004009c4 0x000034 0x000034 R   0x4
  GNU_STACK      0x000000 0x0000000000000000 0x0000000000000000 0x000000 0x000000 RW  0x10
  GNU_RELRO      0x000e10 0x0000000000600e10 0x0000000000600e10 0x0001f0 0x0001f0 R   0x1

 Section to Segment mapping:
  Segment Sections...
   00     
   01     .interp 
   02     .interp .note.ABI-tag .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt .plt.got .text .fini .rodata .eh_frame_hdr .eh_frame 
   03     .init_array .fini_array .jcr .dynamic .got .got.plt .data .bss 
   04     .dynamic 
   05     .note.ABI-tag .note.gnu.build-id 
   06     .eh_frame_hdr 
   07     
   08     .init_array .fini_array .jcr .dynamic .got 

Dynamic section at offset 0xe28 contains 24 entries:
  Tag        Type                         Name/Value
 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]
 0x000000000000000c (INIT)               0x4004a8
 0x000000000000000d (FINI)               0x4007c4
 0x0000000000000019 (INIT_ARRAY)         0x600e10
 0x000000000000001b (INIT_ARRAYSZ)       8 (bytes)
 0x000000000000001a (FINI_ARRAY)         0x600e18
 0x000000000000001c (FINI_ARRAYSZ)       8 (bytes)
 0x000000006ffffef5 (GNU_HASH)           0x400298
 0x0000000000000005 (STRTAB)             0x400378
 0x0000000000000006 (SYMTAB)             0x4002b8
 0x000000000000000a (STRSZ)              88 (bytes)
 0x000000000000000b (SYMENT)             24 (bytes)
 0x0000000000000015 (DEBUG)              0x0
 0x0000000000000003 (PLTGOT)             0x601000
 0x0000000000000002 (PLTRELSZ)           144 (bytes)
 0x0000000000000014 (PLTREL)             RELA
 0x0000000000000017 (JMPREL)             0x400418
 0x0000000000000007 (RELA)               0x400400
 0x0000000000000008 (RELASZ)             24 (bytes)
 0x0000000000000009 (RELAENT)            24 (bytes)
 0x000000006ffffffe (VERNEED)            0x4003e0
 0x000000006fffffff (VERNEEDNUM)         1
 0x000000006ffffff0 (VERSYM)             0x4003d0
 0x0000000000000000 (NULL)               0x0

Relocation section '.rela.dyn' at offset 0x400 contains 1 entries:
    Offset             Info             Type               Symbol's Value  Symbol's Name + Addend
0000000000600ff8  0000000600000006 R_X86_64_GLOB_DAT      0000000000000000 __gmon_start__ + 0

Relocation section '.rela.plt' at offset 0x418 contains 6 entries:
    Offset             Info             Type               Symbol's Value  Symbol's Name + Addend
0000000000601018  0000000100000007 R_X86_64_JUMP_SLOT     0000000000000000 putchar@GLIBC_2.2.5 + 0
0000000000601020  0000000200000007 R_X86_64_JUMP_SLOT     0000000000000000 puts@GLIBC_2.2.5 + 0
0000000000601028  0000000300000007 R_X86_64_JUMP_SLOT     0000000000000000 printf@GLIBC_2.2.5 + 0
0000000000601030  0000000400000007 R_X86_64_JUMP_SLOT     0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0
0000000000601038  0000000500000007 R_X86_64_JUMP_SLOT     0000000000000000 strcmp@GLIBC_2.2.5 + 0
0000000000601040  0000000700000007 R_X86_64_JUMP_SLOT     0000000000000000 gets@GLIBC_2.2.5 + 0

The decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.

Symbol table '.dynsym' contains 8 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND putchar@GLIBC_2.2.5 (2)
     2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5 (2)
     3: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND printf@GLIBC_2.2.5 (2)
     4: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.2.5 (2)
     5: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND strcmp@GLIBC_2.2.5 (2)
     6: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
     7: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND gets@GLIBC_2.2.5 (2)

Symbol table '.symtab' contains 71 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000400238     0 SECTION LOCAL  DEFAULT    1 
     2: 0000000000400254     0 SECTION LOCAL  DEFAULT    2 
     3: 0000000000400274     0 SECTION LOCAL  DEFAULT    3 
     4: 0000000000400298     0 SECTION LOCAL  DEFAULT    4 
     5: 00000000004002b8     0 SECTION LOCAL  DEFAULT    5 
     6: 0000000000400378     0 SECTION LOCAL  DEFAULT    6 
     7: 00000000004003d0     0 SECTION LOCAL  DEFAULT    7 
     8: 00000000004003e0     0 SECTION LOCAL  DEFAULT    8 
     9: 0000000000400400     0 SECTION LOCAL  DEFAULT    9 
    10: 0000000000400418     0 SECTION LOCAL  DEFAULT   10 
    11: 00000000004004a8     0 SECTION LOCAL  DEFAULT   11 
    12: 00000000004004d0     0 SECTION LOCAL  DEFAULT   12 
    13: 0000000000400540     0 SECTION LOCAL  DEFAULT   13 
    14: 0000000000400550     0 SECTION LOCAL  DEFAULT   14 
    15: 00000000004007c4     0 SECTION LOCAL  DEFAULT   15 
    16: 00000000004007d0     0 SECTION LOCAL  DEFAULT   16 
    17: 00000000004009c4     0 SECTION LOCAL  DEFAULT   17 
    18: 00000000004009f8     0 SECTION LOCAL  DEFAULT   18 
    19: 0000000000600e10     0 SECTION LOCAL  DEFAULT   19 
    20: 0000000000600e18     0 SECTION LOCAL  DEFAULT   20 
    21: 0000000000600e20     0 SECTION LOCAL  DEFAULT   21 
    22: 0000000000600e28     0 SECTION LOCAL  DEFAULT   22 
    23: 0000000000600ff8     0 SECTION LOCAL  DEFAULT   23 
    24: 0000000000601000     0 SECTION LOCAL  DEFAULT   24 
    25: 0000000000601048     0 SECTION LOCAL  DEFAULT   25 
    26: 0000000000601058     0 SECTION LOCAL  DEFAULT   26 
    27: 0000000000000000     0 SECTION LOCAL  DEFAULT   27 
    28: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c
    29: 0000000000600e20     0 OBJECT  LOCAL  DEFAULT   21 __JCR_LIST__
    30: 0000000000400580     0 FUNC    LOCAL  DEFAULT   14 deregister_tm_clones
    31: 00000000004005c0     0 FUNC    LOCAL  DEFAULT   14 register_tm_clones
    32: 0000000000400600     0 FUNC    LOCAL  DEFAULT   14 __do_global_dtors_aux
    33: 0000000000601058     1 OBJECT  LOCAL  DEFAULT   26 completed.7594
    34: 0000000000600e18     0 OBJECT  LOCAL  DEFAULT   20 __do_global_dtors_aux_fini_array_entry
    35: 0000000000400620     0 FUNC    LOCAL  DEFAULT   14 frame_dummy
    36: 0000000000600e10     0 OBJECT  LOCAL  DEFAULT   19 __frame_dummy_init_array_entry
    37: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ch08-SalesFigures.c
    38: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c
    39: 0000000000400ae8     0 OBJECT  LOCAL  DEFAULT   18 __FRAME_END__
    40: 0000000000600e20     0 OBJECT  LOCAL  DEFAULT   21 __JCR_END__
    41: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS 
    42: 0000000000600e18     0 NOTYPE  LOCAL  DEFAULT   19 __init_array_end
    43: 0000000000600e28     0 OBJECT  LOCAL  DEFAULT   22 _DYNAMIC
    44: 0000000000600e10     0 NOTYPE  LOCAL  DEFAULT   19 __init_array_start
    45: 00000000004009c4     0 NOTYPE  LOCAL  DEFAULT   17 __GNU_EH_FRAME_HDR
    46: 0000000000601000     0 OBJECT  LOCAL  DEFAULT   24 _GLOBAL_OFFSET_TABLE_
    47: 00000000004007c0     2 FUNC    GLOBAL DEFAULT   14 __libc_csu_fini
    48: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND putchar@@GLIBC_2.2.5
    49: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTable
    50: 0000000000601048     0 NOTYPE  WEAK   DEFAULT   25 data_start
    51: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@@GLIBC_2.2.5
    52: 0000000000601058     0 NOTYPE  GLOBAL DEFAULT   25 _edata
    53: 00000000004007c4     0 FUNC    GLOBAL DEFAULT   15 _fini
    54: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND printf@@GLIBC_2.2.5
    55: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@@GLIBC_2.2.5
    56: 0000000000601048     0 NOTYPE  GLOBAL DEFAULT   25 __data_start
    57: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND strcmp@@GLIBC_2.2.5
    58: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
    59: 0000000000601050     0 OBJECT  GLOBAL HIDDEN    25 __dso_handle
    60: 00000000004007d0     4 OBJECT  GLOBAL DEFAULT   16 _IO_stdin_used
    61: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND gets@@GLIBC_2.2.5
    62: 0000000000400750   101 FUNC    GLOBAL DEFAULT   14 __libc_csu_init
    63: 0000000000601060     0 NOTYPE  GLOBAL DEFAULT   26 _end
    64: 0000000000400550    42 FUNC    GLOBAL DEFAULT   14 _start
    65: 0000000000601058     0 NOTYPE  GLOBAL DEFAULT   26 __bss_start
    66: 0000000000400646   262 FUNC    GLOBAL DEFAULT   14 main
    67: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses
    68: 0000000000601058     0 OBJECT  GLOBAL HIDDEN    25 __TMC_END__
    69: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable
    70: 00000000004004a8     0 FUNC    GLOBAL DEFAULT   11 _init

Version symbols section '.gnu.version' contains 8 entries:
 Addr: 00000000004003d0  Offset: 0x0003d0  Link: 5 (.dynsym)
  000:   0 (*local*)       2 (GLIBC_2.2.5)   2 (GLIBC_2.2.5)   2 (GLIBC_2.2.5)
  004:   2 (GLIBC_2.2.5)   2 (GLIBC_2.2.5)   0 (*local*)       2 (GLIBC_2.2.5)

Version needs section '.gnu.version_r' contains 1 entries:
 Addr: 0x00000000004003e0  Offset: 0x0003e0  Link: 6 (.dynstr)
  000000: Version: 1  File: libc.so.6  Cnt: 1
  0x0010:   Name: GLIBC_2.2.5  Flags: none  Version: 2

Displaying notes found at file offset 0x00000254 with length 0x00000020:
  Owner                 Data size	Description
  GNU                  0x00000010	NT_GNU_ABI_TAG (ABI version tag)
    OS: Linux, ABI: 2.6.32

Displaying notes found at file offset 0x00000274 with length 0x00000024:
  Owner                 Data size	Description
  GNU                  0x00000014	NT_GNU_BUILD_ID (unique build ID bitstring)
    Build ID: 7db51c1cc796ac5997c604ed358ee4d2471fa9a2


************ OBJDUMP EXECUTABLE ************


ch08-SalesFigures:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x233>
  400248:	78 38                	js     400282 <_init-0x226>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 20                	add    BYTE PTR [rax],ah
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 7d b5             	add    BYTE PTR [rbp-0x4b],bh
  400286:	1c 1c                	sbb    al,0x1c
  400288:	c7                   	(bad)  
  400289:	96                   	xchg   esi,eax
  40028a:	ac                   	lods   al,BYTE PTR ds:[rsi]
  40028b:	59                   	pop    rcx
  40028c:	97                   	xchg   edi,eax
  40028d:	c6 04 ed 35 8e e4 d2 	mov    BYTE PTR [rbp*8-0x2d1b71cb],0x47
  400294:	47 
  400295:	1f                   	(bad)  
  400296:	a9                   	.byte 0xa9
  400297:	a2                   	.byte 0xa2

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    DWORD PTR [rax],eax
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	01 00                	add    DWORD PTR [rax],eax
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	15 00 00 00 12       	adc    eax,0x12000000
	...
  4002e5:	00 00                	add    BYTE PTR [rax],al
  4002e7:	00 10                	add    BYTE PTR [rax],dl
  4002e9:	00 00                	add    BYTE PTR [rax],al
  4002eb:	00 12                	add    BYTE PTR [rdx],dl
	...
  4002fd:	00 00                	add    BYTE PTR [rax],al
  4002ff:	00 1d 00 00 00 12    	add    BYTE PTR [rip+0x12000000],bl        # 12400305 <_end+0x11dff2a5>
	...
  400315:	00 00                	add    BYTE PTR [rax],al
  400317:	00 2b                	add    BYTE PTR [rbx],ch
  400319:	00 00                	add    BYTE PTR [rax],al
  40031b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40032d:	00 00                	add    BYTE PTR [rax],al
  40032f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
  400332:	00 00                	add    BYTE PTR [rax],al
  400334:	12 00                	adc    al,BYTE PTR [rax]
	...
  400346:	00 00                	add    BYTE PTR [rax],al
  400348:	3d 00 00 00 20       	cmp    eax,0x20000000
	...
  40035d:	00 00                	add    BYTE PTR [rax],al
  40035f:	00 0b                	add    BYTE PTR [rbx],cl
  400361:	00 00                	add    BYTE PTR [rax],al
  400363:	00 12                	add    BYTE PTR [rdx],dl
	...

Disassembly of section .dynstr:

0000000000400378 <.dynstr>:
  400378:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40037c:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  40037e:	73 6f                	jae    4003ef <_init-0xb9>
  400380:	2e 36 00 67 65       	cs add BYTE PTR ss:[rdi+0x65],ah
  400385:	74 73                	je     4003fa <_init-0xae>
  400387:	00 70 75             	add    BYTE PTR [rax+0x75],dh
  40038a:	74 73                	je     4003ff <_init-0xa9>
  40038c:	00 70 75             	add    BYTE PTR [rax+0x75],dh
  40038f:	74 63                	je     4003f4 <_init-0xb4>
  400391:	68 61 72 00 70       	push   0x70007261
  400396:	72 69                	jb     400401 <_init-0xa7>
  400398:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400399:	74 66                	je     400401 <_init-0xa7>
  40039b:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
  40039e:	72 63                	jb     400403 <_init-0xa5>
  4003a0:	6d                   	ins    DWORD PTR es:[rdi],dx
  4003a1:	70 00                	jo     4003a3 <_init-0x105>
  4003a3:	5f                   	pop    rdi
  4003a4:	5f                   	pop    rdi
  4003a5:	6c                   	ins    BYTE PTR es:[rdi],dx
  4003a6:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  4003ad:	72 74                	jb     400423 <_init-0x85>
  4003af:	5f                   	pop    rdi
  4003b0:	6d                   	ins    DWORD PTR es:[rdi],dx
  4003b1:	61                   	(bad)  
  4003b2:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [rsi+0x0],0x6d675f5f
  4003b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4003ba:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4003bb:	5f                   	pop    rdi
  4003bc:	73 74                	jae    400432 <_init-0x76>
  4003be:	61                   	(bad)  
  4003bf:	72 74                	jb     400435 <_init-0x73>
  4003c1:	5f                   	pop    rdi
  4003c2:	5f                   	pop    rdi
  4003c3:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  4003c6:	49                   	rex.WB
  4003c7:	42                   	rex.X
  4003c8:	43 5f                	rex.XB pop r15
  4003ca:	32 2e                	xor    ch,BYTE PTR [rsi]
  4003cc:	32 2e                	xor    ch,BYTE PTR [rsi]
  4003ce:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000004003d0 <.gnu.version>:
  4003d0:	00 00                	add    BYTE PTR [rax],al
  4003d2:	02 00                	add    al,BYTE PTR [rax]
  4003d4:	02 00                	add    al,BYTE PTR [rax]
  4003d6:	02 00                	add    al,BYTE PTR [rax]
  4003d8:	02 00                	add    al,BYTE PTR [rax]
  4003da:	02 00                	add    al,BYTE PTR [rax]
  4003dc:	00 00                	add    BYTE PTR [rax],al
  4003de:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

00000000004003e0 <.gnu.version_r>:
  4003e0:	01 00                	add    DWORD PTR [rax],eax
  4003e2:	01 00                	add    DWORD PTR [rax],eax
  4003e4:	01 00                	add    DWORD PTR [rax],eax
  4003e6:	00 00                	add    BYTE PTR [rax],al
  4003e8:	10 00                	adc    BYTE PTR [rax],al
  4003ea:	00 00                	add    BYTE PTR [rax],al
  4003ec:	00 00                	add    BYTE PTR [rax],al
  4003ee:	00 00                	add    BYTE PTR [rax],al
  4003f0:	75 1a                	jne    40040c <_init-0x9c>
  4003f2:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  4003f8:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
  4003fb:	00 00                	add    BYTE PTR [rax],al
  4003fd:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000400400 <.rela.dyn>:
  400400:	f8                   	clc    
  400401:	0f 60 00             	punpcklbw mm0,DWORD PTR [rax]
  400404:	00 00                	add    BYTE PTR [rax],al
  400406:	00 00                	add    BYTE PTR [rax],al
  400408:	06                   	(bad)  
  400409:	00 00                	add    BYTE PTR [rax],al
  40040b:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .rela.plt:

0000000000400418 <.rela.plt>:
  400418:	18 10                	sbb    BYTE PTR [rax],dl
  40041a:	60                   	(bad)  
  40041b:	00 00                	add    BYTE PTR [rax],al
  40041d:	00 00                	add    BYTE PTR [rax],al
  40041f:	00 07                	add    BYTE PTR [rdi],al
  400421:	00 00                	add    BYTE PTR [rax],al
  400423:	00 01                	add    BYTE PTR [rcx],al
	...
  40042d:	00 00                	add    BYTE PTR [rax],al
  40042f:	00 20                	add    BYTE PTR [rax],ah
  400431:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  400434:	00 00                	add    BYTE PTR [rax],al
  400436:	00 00                	add    BYTE PTR [rax],al
  400438:	07                   	(bad)  
  400439:	00 00                	add    BYTE PTR [rax],al
  40043b:	00 02                	add    BYTE PTR [rdx],al
	...
  400445:	00 00                	add    BYTE PTR [rax],al
  400447:	00 28                	add    BYTE PTR [rax],ch
  400449:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  40044c:	00 00                	add    BYTE PTR [rax],al
  40044e:	00 00                	add    BYTE PTR [rax],al
  400450:	07                   	(bad)  
  400451:	00 00                	add    BYTE PTR [rax],al
  400453:	00 03                	add    BYTE PTR [rbx],al
	...
  40045d:	00 00                	add    BYTE PTR [rax],al
  40045f:	00 30                	add    BYTE PTR [rax],dh
  400461:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  400464:	00 00                	add    BYTE PTR [rax],al
  400466:	00 00                	add    BYTE PTR [rax],al
  400468:	07                   	(bad)  
  400469:	00 00                	add    BYTE PTR [rax],al
  40046b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
  400476:	00 00                	add    BYTE PTR [rax],al
  400478:	38 10                	cmp    BYTE PTR [rax],dl
  40047a:	60                   	(bad)  
  40047b:	00 00                	add    BYTE PTR [rax],al
  40047d:	00 00                	add    BYTE PTR [rax],al
  40047f:	00 07                	add    BYTE PTR [rdi],al
  400481:	00 00                	add    BYTE PTR [rax],al
  400483:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 400489 <_init-0x1f>
  400489:	00 00                	add    BYTE PTR [rax],al
  40048b:	00 00                	add    BYTE PTR [rax],al
  40048d:	00 00                	add    BYTE PTR [rax],al
  40048f:	00 40 10             	add    BYTE PTR [rax+0x10],al
  400492:	60                   	(bad)  
  400493:	00 00                	add    BYTE PTR [rax],al
  400495:	00 00                	add    BYTE PTR [rax],al
  400497:	00 07                	add    BYTE PTR [rdi],al
  400499:	00 00                	add    BYTE PTR [rax],al
  40049b:	00 07                	add    BYTE PTR [rdi],al
	...

Disassembly of section .init:

00000000004004a8 <_init>:
  4004a8:	48 83 ec 08          	sub    rsp,0x8
  4004ac:	48 8b 05 45 0b 20 00 	mov    rax,QWORD PTR [rip+0x200b45]        # 600ff8 <_DYNAMIC+0x1d0>
  4004b3:	48 85 c0             	test   rax,rax
  4004b6:	74 05                	je     4004bd <_init+0x15>
  4004b8:	e8 83 00 00 00       	call   400540 <gets@plt+0x10>
  4004bd:	48 83 c4 08          	add    rsp,0x8
  4004c1:	c3                   	ret    

Disassembly of section .plt:

00000000004004d0 <putchar@plt-0x10>:
  4004d0:	ff 35 32 0b 20 00    	push   QWORD PTR [rip+0x200b32]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004d6:	ff 25 34 0b 20 00    	jmp    QWORD PTR [rip+0x200b34]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004004e0 <putchar@plt>:
  4004e0:	ff 25 32 0b 20 00    	jmp    QWORD PTR [rip+0x200b32]        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4004e6:	68 00 00 00 00       	push   0x0
  4004eb:	e9 e0 ff ff ff       	jmp    4004d0 <_init+0x28>

00000000004004f0 <puts@plt>:
  4004f0:	ff 25 2a 0b 20 00    	jmp    QWORD PTR [rip+0x200b2a]        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4004f6:	68 01 00 00 00       	push   0x1
  4004fb:	e9 d0 ff ff ff       	jmp    4004d0 <_init+0x28>

0000000000400500 <printf@plt>:
  400500:	ff 25 22 0b 20 00    	jmp    QWORD PTR [rip+0x200b22]        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400506:	68 02 00 00 00       	push   0x2
  40050b:	e9 c0 ff ff ff       	jmp    4004d0 <_init+0x28>

0000000000400510 <__libc_start_main@plt>:
  400510:	ff 25 1a 0b 20 00    	jmp    QWORD PTR [rip+0x200b1a]        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400516:	68 03 00 00 00       	push   0x3
  40051b:	e9 b0 ff ff ff       	jmp    4004d0 <_init+0x28>

0000000000400520 <strcmp@plt>:
  400520:	ff 25 12 0b 20 00    	jmp    QWORD PTR [rip+0x200b12]        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400526:	68 04 00 00 00       	push   0x4
  40052b:	e9 a0 ff ff ff       	jmp    4004d0 <_init+0x28>

0000000000400530 <gets@plt>:
  400530:	ff 25 0a 0b 20 00    	jmp    QWORD PTR [rip+0x200b0a]        # 601040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400536:	68 05 00 00 00       	push   0x5
  40053b:	e9 90 ff ff ff       	jmp    4004d0 <_init+0x28>

Disassembly of section .plt.got:

0000000000400540 <.plt.got>:
  400540:	ff 25 b2 0a 20 00    	jmp    QWORD PTR [rip+0x200ab2]        # 600ff8 <_DYNAMIC+0x1d0>
  400546:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000400550 <_start>:
  400550:	31 ed                	xor    ebp,ebp
  400552:	49 89 d1             	mov    r9,rdx
  400555:	5e                   	pop    rsi
  400556:	48 89 e2             	mov    rdx,rsp
  400559:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  40055d:	50                   	push   rax
  40055e:	54                   	push   rsp
  40055f:	49 c7 c0 c0 07 40 00 	mov    r8,0x4007c0
  400566:	48 c7 c1 50 07 40 00 	mov    rcx,0x400750
  40056d:	48 c7 c7 46 06 40 00 	mov    rdi,0x400646
  400574:	e8 97 ff ff ff       	call   400510 <__libc_start_main@plt>
  400579:	f4                   	hlt    
  40057a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400580 <deregister_tm_clones>:
  400580:	b8 5f 10 60 00       	mov    eax,0x60105f
  400585:	55                   	push   rbp
  400586:	48 2d 58 10 60 00    	sub    rax,0x601058
  40058c:	48 83 f8 0e          	cmp    rax,0xe
  400590:	48 89 e5             	mov    rbp,rsp
  400593:	76 1b                	jbe    4005b0 <deregister_tm_clones+0x30>
  400595:	b8 00 00 00 00       	mov    eax,0x0
  40059a:	48 85 c0             	test   rax,rax
  40059d:	74 11                	je     4005b0 <deregister_tm_clones+0x30>
  40059f:	5d                   	pop    rbp
  4005a0:	bf 58 10 60 00       	mov    edi,0x601058
  4005a5:	ff e0                	jmp    rax
  4005a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  4005ae:	00 00 
  4005b0:	5d                   	pop    rbp
  4005b1:	c3                   	ret    
  4005b2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  4005b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  4005bd:	00 00 00 

00000000004005c0 <register_tm_clones>:
  4005c0:	be 58 10 60 00       	mov    esi,0x601058
  4005c5:	55                   	push   rbp
  4005c6:	48 81 ee 58 10 60 00 	sub    rsi,0x601058
  4005cd:	48 c1 fe 03          	sar    rsi,0x3
  4005d1:	48 89 e5             	mov    rbp,rsp
  4005d4:	48 89 f0             	mov    rax,rsi
  4005d7:	48 c1 e8 3f          	shr    rax,0x3f
  4005db:	48 01 c6             	add    rsi,rax
  4005de:	48 d1 fe             	sar    rsi,1
  4005e1:	74 15                	je     4005f8 <register_tm_clones+0x38>
  4005e3:	b8 00 00 00 00       	mov    eax,0x0
  4005e8:	48 85 c0             	test   rax,rax
  4005eb:	74 0b                	je     4005f8 <register_tm_clones+0x38>
  4005ed:	5d                   	pop    rbp
  4005ee:	bf 58 10 60 00       	mov    edi,0x601058
  4005f3:	ff e0                	jmp    rax
  4005f5:	0f 1f 00             	nop    DWORD PTR [rax]
  4005f8:	5d                   	pop    rbp
  4005f9:	c3                   	ret    
  4005fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400600 <__do_global_dtors_aux>:
  400600:	80 3d 51 0a 20 00 00 	cmp    BYTE PTR [rip+0x200a51],0x0        # 601058 <__TMC_END__>
  400607:	75 11                	jne    40061a <__do_global_dtors_aux+0x1a>
  400609:	55                   	push   rbp
  40060a:	48 89 e5             	mov    rbp,rsp
  40060d:	e8 6e ff ff ff       	call   400580 <deregister_tm_clones>
  400612:	5d                   	pop    rbp
  400613:	c6 05 3e 0a 20 00 01 	mov    BYTE PTR [rip+0x200a3e],0x1        # 601058 <__TMC_END__>
  40061a:	f3 c3                	repz ret 
  40061c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400620 <frame_dummy>:
  400620:	bf 20 0e 60 00       	mov    edi,0x600e20
  400625:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  400629:	75 05                	jne    400630 <frame_dummy+0x10>
  40062b:	eb 93                	jmp    4005c0 <register_tm_clones>
  40062d:	0f 1f 00             	nop    DWORD PTR [rax]
  400630:	b8 00 00 00 00       	mov    eax,0x0
  400635:	48 85 c0             	test   rax,rax
  400638:	74 f1                	je     40062b <frame_dummy+0xb>
  40063a:	55                   	push   rbp
  40063b:	48 89 e5             	mov    rbp,rsp
  40063e:	ff d0                	call   rax
  400640:	5d                   	pop    rbp
  400641:	e9 7a ff ff ff       	jmp    4005c0 <register_tm_clones>

0000000000400646 <main>:
  400646:	55                   	push   rbp
  400647:	48 89 e5             	mov    rbp,rsp
  40064a:	48 83 ec 40          	sub    rsp,0x40
  40064e:	bf d8 07 40 00       	mov    edi,0x4007d8
  400653:	e8 98 fe ff ff       	call   4004f0 <puts@plt>
  400658:	bf 00 08 40 00       	mov    edi,0x400800
  40065d:	e8 8e fe ff ff       	call   4004f0 <puts@plt>
  400662:	c6 45 c0 42          	mov    BYTE PTR [rbp-0x40],0x42
  400666:	c6 45 c1 69          	mov    BYTE PTR [rbp-0x3f],0x69
  40066a:	c6 45 c2 6e          	mov    BYTE PTR [rbp-0x3e],0x6e
  40066e:	c6 45 c3 61          	mov    BYTE PTR [rbp-0x3d],0x61
  400672:	c6 45 c4 72          	mov    BYTE PTR [rbp-0x3c],0x72
  400676:	c6 45 c5 79          	mov    BYTE PTR [rbp-0x3b],0x79
  40067a:	c6 45 c6 41          	mov    BYTE PTR [rbp-0x3a],0x41
  40067e:	c6 45 c7 6e          	mov    BYTE PTR [rbp-0x39],0x6e
  400682:	c6 45 c8 61          	mov    BYTE PTR [rbp-0x38],0x61
  400686:	c6 45 c9 6c          	mov    BYTE PTR [rbp-0x37],0x6c
  40068a:	c6 45 ca 79          	mov    BYTE PTR [rbp-0x36],0x79
  40068e:	c6 45 cb 73          	mov    BYTE PTR [rbp-0x35],0x73
  400692:	c6 45 cc 69          	mov    BYTE PTR [rbp-0x34],0x69
  400696:	c6 45 cd 73          	mov    BYTE PTR [rbp-0x33],0x73
  40069a:	c6 45 ce 49          	mov    BYTE PTR [rbp-0x32],0x49
  40069e:	c6 45 cf 73          	mov    BYTE PTR [rbp-0x31],0x73
  4006a2:	c6 45 d0 53          	mov    BYTE PTR [rbp-0x30],0x53
  4006a6:	c6 45 d1 6f          	mov    BYTE PTR [rbp-0x2f],0x6f
  4006aa:	c6 45 d2 4d          	mov    BYTE PTR [rbp-0x2e],0x4d
  4006ae:	c6 45 d3 75          	mov    BYTE PTR [rbp-0x2d],0x75
  4006b2:	c6 45 d4 63          	mov    BYTE PTR [rbp-0x2c],0x63
  4006b6:	c6 45 d5 68          	mov    BYTE PTR [rbp-0x2b],0x68
  4006ba:	c6 45 d6 46          	mov    BYTE PTR [rbp-0x2a],0x46
  4006be:	c6 45 d7 75          	mov    BYTE PTR [rbp-0x29],0x75
  4006c2:	c6 45 d8 6e          	mov    BYTE PTR [rbp-0x28],0x6e
  4006c6:	c6 45 d9 21          	mov    BYTE PTR [rbp-0x27],0x21
  4006ca:	c6 45 da 00          	mov    BYTE PTR [rbp-0x26],0x0
  4006ce:	48 8d 45 e0          	lea    rax,[rbp-0x20]
  4006d2:	48 89 c7             	mov    rdi,rax
  4006d5:	b8 00 00 00 00       	mov    eax,0x0
  4006da:	e8 51 fe ff ff       	call   400530 <gets@plt>
  4006df:	bf 27 08 40 00       	mov    edi,0x400827
  4006e4:	b8 00 00 00 00       	mov    eax,0x0
  4006e9:	e8 12 fe ff ff       	call   400500 <printf@plt>
  4006ee:	48 8d 45 e0          	lea    rax,[rbp-0x20]
  4006f2:	48 89 c7             	mov    rdi,rax
  4006f5:	b8 00 00 00 00       	mov    eax,0x0
  4006fa:	e8 01 fe ff ff       	call   400500 <printf@plt>
  4006ff:	bf 0a 00 00 00       	mov    edi,0xa
  400704:	e8 d7 fd ff ff       	call   4004e0 <putchar@plt>
  400709:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
  40070d:	48 8d 45 e0          	lea    rax,[rbp-0x20]
  400711:	48 89 d6             	mov    rsi,rdx
  400714:	48 89 c7             	mov    rdi,rax
  400717:	e8 04 fe ff ff       	call   400520 <strcmp@plt>
  40071c:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  40071f:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
  400723:	75 16                	jne    40073b <main+0xf5>
  400725:	bf 35 08 40 00       	mov    edi,0x400835
  40072a:	e8 c1 fd ff ff       	call   4004f0 <puts@plt>
  40072f:	bf 50 08 40 00       	mov    edi,0x400850
  400734:	e8 b7 fd ff ff       	call   4004f0 <puts@plt>
  400739:	eb 0a                	jmp    400745 <main+0xff>
  40073b:	bf a3 09 40 00       	mov    edi,0x4009a3
  400740:	e8 ab fd ff ff       	call   4004f0 <puts@plt>
  400745:	b8 00 00 00 00       	mov    eax,0x0
  40074a:	c9                   	leave  
  40074b:	c3                   	ret    
  40074c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400750 <__libc_csu_init>:
  400750:	41 57                	push   r15
  400752:	41 56                	push   r14
  400754:	41 89 ff             	mov    r15d,edi
  400757:	41 55                	push   r13
  400759:	41 54                	push   r12
  40075b:	4c 8d 25 ae 06 20 00 	lea    r12,[rip+0x2006ae]        # 600e10 <__frame_dummy_init_array_entry>
  400762:	55                   	push   rbp
  400763:	48 8d 2d ae 06 20 00 	lea    rbp,[rip+0x2006ae]        # 600e18 <__init_array_end>
  40076a:	53                   	push   rbx
  40076b:	49 89 f6             	mov    r14,rsi
  40076e:	49 89 d5             	mov    r13,rdx
  400771:	4c 29 e5             	sub    rbp,r12
  400774:	48 83 ec 08          	sub    rsp,0x8
  400778:	48 c1 fd 03          	sar    rbp,0x3
  40077c:	e8 27 fd ff ff       	call   4004a8 <_init>
  400781:	48 85 ed             	test   rbp,rbp
  400784:	74 20                	je     4007a6 <__libc_csu_init+0x56>
  400786:	31 db                	xor    ebx,ebx
  400788:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40078f:	00 
  400790:	4c 89 ea             	mov    rdx,r13
  400793:	4c 89 f6             	mov    rsi,r14
  400796:	44 89 ff             	mov    edi,r15d
  400799:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40079d:	48 83 c3 01          	add    rbx,0x1
  4007a1:	48 39 eb             	cmp    rbx,rbp
  4007a4:	75 ea                	jne    400790 <__libc_csu_init+0x40>
  4007a6:	48 83 c4 08          	add    rsp,0x8
  4007aa:	5b                   	pop    rbx
  4007ab:	5d                   	pop    rbp
  4007ac:	41 5c                	pop    r12
  4007ae:	41 5d                	pop    r13
  4007b0:	41 5e                	pop    r14
  4007b2:	41 5f                	pop    r15
  4007b4:	c3                   	ret    
  4007b5:	90                   	nop
  4007b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  4007bd:	00 00 00 

00000000004007c0 <__libc_csu_fini>:
  4007c0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000004007c4 <_fini>:
  4007c4:	48 83 ec 08          	sub    rsp,0x8
  4007c8:	48 83 c4 08          	add    rsp,0x8
  4007cc:	c3                   	ret    

Disassembly of section .rodata:

00000000004007d0 <_IO_stdin_used>:
  4007d0:	01 00                	add    DWORD PTR [rax],eax
  4007d2:	02 00                	add    al,BYTE PTR [rax]
  4007d4:	00 00                	add    BYTE PTR [rax],al
  4007d6:	00 00                	add    BYTE PTR [rax],al
  4007d8:	0a 48 65             	or     cl,BYTE PTR [rax+0x65]
  4007db:	6c                   	ins    BYTE PTR es:[rdi],dx
  4007dc:	6c                   	ins    BYTE PTR es:[rdi],dx
  4007dd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4007de:	2c 20                	sub    al,0x20
  4007e0:	61                   	(bad)  
  4007e1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4007e2:	64 20 77 65          	and    BYTE PTR fs:[rdi+0x65],dh
  4007e6:	6c                   	ins    BYTE PTR es:[rdi],dx
  4007e7:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
  4007ea:	65 20 74 6f 20       	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4007ef:	43 68 61 70 74 65    	rex.XB push 0x65747061
  4007f5:	72 20                	jb     400817 <_IO_stdin_used+0x47>
  4007f7:	30 38                	xor    BYTE PTR [rax],bh
  4007f9:	21 00                	and    DWORD PTR [rax],eax
  4007fb:	00 00                	add    BYTE PTR [rax],al
  4007fd:	00 00                	add    BYTE PTR [rax],al
  4007ff:	00 50 6c             	add    BYTE PTR [rax+0x6c],dl
  400802:	65 61                	gs (bad) 
  400804:	73 65                	jae    40086b <_IO_stdin_used+0x9b>
  400806:	20 65 6e             	and    BYTE PTR [rbp+0x6e],ah
  400809:	74 65                	je     400870 <_IO_stdin_used+0xa0>
  40080b:	72 20                	jb     40082d <_IO_stdin_used+0x5d>
  40080d:	74 68                	je     400877 <_IO_stdin_used+0xa7>
  40080f:	65 20 70 61          	and    BYTE PTR gs:[rax+0x61],dh
  400813:	73 73                	jae    400888 <_IO_stdin_used+0xb8>
  400815:	77 6f                	ja     400886 <_IO_stdin_used+0xb6>
  400817:	72 64                	jb     40087d <_IO_stdin_used+0xad>
  400819:	20 74 6f 20          	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40081d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
  400820:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400821:	65 63 74 3a 20       	movsxd esi,DWORD PTR gs:[rdx+rdi*1+0x20]
  400826:	00 59 6f             	add    BYTE PTR [rcx+0x6f],bl
  400829:	75 20                	jne    40084b <_IO_stdin_used+0x7b>
  40082b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  40082d:	74 65                	je     400894 <_IO_stdin_used+0xc4>
  40082f:	72 65                	jb     400896 <_IO_stdin_used+0xc6>
  400831:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
  400834:	00 50 61             	add    BYTE PTR [rax+0x61],dl
  400837:	73 73                	jae    4008ac <_IO_stdin_used+0xdc>
  400839:	77 6f                	ja     4008aa <_IO_stdin_used+0xda>
  40083b:	72 64                	jb     4008a1 <_IO_stdin_used+0xd1>
  40083d:	20 69 73             	and    BYTE PTR [rcx+0x73],ch
  400840:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
  400843:	72 72                	jb     4008b7 <_IO_stdin_used+0xe7>
  400845:	65 63 74 21 00       	movsxd esi,DWORD PTR gs:[rcx+riz*1+0x0]
  40084a:	00 00                	add    BYTE PTR [rax],al
  40084c:	00 00                	add    BYTE PTR [rax],al
  40084e:	00 00                	add    BYTE PTR [rax],al
  400850:	0a 0a                	or     cl,BYTE PTR [rdx]
  400852:	4d 6f                	rex.WRB outs dx,DWORD PTR ds:[rsi]
  400854:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400855:	74 68                	je     4008bf <_IO_stdin_used+0xef>
  400857:	20 74 6f 20          	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40085b:	64 61                	fs (bad) 
  40085d:	74 65                	je     4008c4 <_IO_stdin_used+0xf4>
  40085f:	20 73 61             	and    BYTE PTR [rbx+0x61],dh
  400862:	6c                   	ins    BYTE PTR es:[rdi],dx
  400863:	65 73 20             	gs jae 400886 <_IO_stdin_used+0xb6>
  400866:	61                   	(bad)  
  400867:	72 65                	jb     4008ce <_IO_stdin_used+0xfe>
  400869:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
  40086c:	20 66 6f             	and    BYTE PTR [rsi+0x6f],ah
  40086f:	6c                   	ins    BYTE PTR es:[rdi],dx
  400870:	6c                   	ins    BYTE PTR es:[rdi],dx
  400871:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400872:	77 73                	ja     4008e7 <_IO_stdin_used+0x117>
  400874:	2e 0a 0a             	or     cl,BYTE PTR cs:[rdx]
  400877:	4d 6f                	rex.WRB outs dx,DWORD PTR ds:[rsi]
  400879:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40087a:	74 68                	je     4008e4 <_IO_stdin_used+0x114>
  40087c:	09 09                	or     DWORD PTR [rcx],ecx
  40087e:	59                   	pop    rcx
  40087f:	65 61                	gs (bad) 
  400881:	72 09                	jb     40088c <_IO_stdin_used+0xbc>
  400883:	09 54 6f 74          	or     DWORD PTR [rdi+rbp*2+0x74],edx
  400887:	61                   	(bad)  
  400888:	6c                   	ins    BYTE PTR es:[rdi],dx
  400889:	20 53 61             	and    BYTE PTR [rbx+0x61],dl
  40088c:	6c                   	ins    BYTE PTR es:[rdi],dx
  40088d:	65 73 0a             	gs jae 40089a <_IO_stdin_used+0xca>
  400890:	0a 4a 61             	or     cl,BYTE PTR [rdx+0x61]
  400893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400894:	75 61                	jne    4008f7 <_IO_stdin_used+0x127>
  400896:	72 79                	jb     400911 <_IO_stdin_used+0x141>
  400898:	09 09                	or     DWORD PTR [rcx],ecx
  40089a:	32 30                	xor    dh,BYTE PTR [rax]
  40089c:	31 38                	xor    DWORD PTR [rax],edi
  40089e:	09 09                	or     DWORD PTR [rcx],ecx
  4008a0:	24 31                	and    al,0x31
  4008a2:	34 30                	xor    al,0x30
  4008a4:	2c 30                	sub    al,0x30
  4008a6:	30 30                	xor    BYTE PTR [rax],dh
  4008a8:	0a 46 65             	or     al,BYTE PTR [rsi+0x65]
  4008ab:	62 72 75 61 72       	(bad)  {k1}
  4008b0:	79 09                	jns    4008bb <_IO_stdin_used+0xeb>
  4008b2:	32 30                	xor    dh,BYTE PTR [rax]
  4008b4:	31 38                	xor    DWORD PTR [rax],edi
  4008b6:	09 09                	or     DWORD PTR [rcx],ecx
  4008b8:	24 32                	and    al,0x32
  4008ba:	33 35 2c 30 30 30    	xor    esi,DWORD PTR [rip+0x3030302c]        # 307038ec <_end+0x3010288c>
  4008c0:	0a 4d 61             	or     cl,BYTE PTR [rbp+0x61]
  4008c3:	72 63                	jb     400928 <_IO_stdin_used+0x158>
  4008c5:	68 09 09 32 30       	push   0x30320909
  4008ca:	31 38                	xor    DWORD PTR [rax],edi
  4008cc:	09 09                	or     DWORD PTR [rcx],ecx
  4008ce:	24 31                	and    al,0x31
  4008d0:	39 33                	cmp    DWORD PTR [rbx],esi
  4008d2:	2c 30                	sub    al,0x30
  4008d4:	30 30                	xor    BYTE PTR [rax],dh
  4008d6:	0a 41 70             	or     al,BYTE PTR [rcx+0x70]
  4008d9:	72 69                	jb     400944 <_IO_stdin_used+0x174>
  4008db:	6c                   	ins    BYTE PTR es:[rdi],dx
  4008dc:	09 09                	or     DWORD PTR [rcx],ecx
  4008de:	32 30                	xor    dh,BYTE PTR [rax]
  4008e0:	31 38                	xor    DWORD PTR [rax],edi
  4008e2:	09 09                	or     DWORD PTR [rcx],ecx
  4008e4:	24 32                	and    al,0x32
  4008e6:	32 35 2c 34 35 36    	xor    dh,BYTE PTR [rip+0x3635342c]        # 36753d18 <_end+0x36152cb8>
  4008ec:	0a 4d 61             	or     cl,BYTE PTR [rbp+0x61]
  4008ef:	79 09                	jns    4008fa <_IO_stdin_used+0x12a>
  4008f1:	09 32                	or     DWORD PTR [rdx],esi
  4008f3:	30 31                	xor    BYTE PTR [rcx],dh
  4008f5:	38 09                	cmp    BYTE PTR [rcx],cl
  4008f7:	09 24 31             	or     DWORD PTR [rcx+rsi*1],esp
  4008fa:	33 30                	xor    esi,DWORD PTR [rax]
  4008fc:	2c 34                	sub    al,0x34
  4008fe:	35 36 0a 4a 75       	xor    eax,0x754a0a36
  400903:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400904:	65 09 09             	or     DWORD PTR gs:[rcx],ecx
  400907:	32 30                	xor    dh,BYTE PTR [rax]
  400909:	31 38                	xor    DWORD PTR [rax],edi
  40090b:	09 09                	or     DWORD PTR [rcx],ecx
  40090d:	24 32                	and    al,0x32
  40090f:	31 33                	xor    DWORD PTR [rbx],esi
  400911:	2c 33                	sub    al,0x33
  400913:	38 39                	cmp    BYTE PTR [rcx],bh
  400915:	0a 4a 75             	or     cl,BYTE PTR [rdx+0x75]
  400918:	6c                   	ins    BYTE PTR es:[rdi],dx
  400919:	79 09                	jns    400924 <_IO_stdin_used+0x154>
  40091b:	09 32                	or     DWORD PTR [rdx],esi
  40091d:	30 31                	xor    BYTE PTR [rcx],dh
  40091f:	38 09                	cmp    BYTE PTR [rcx],cl
  400921:	09 24 32             	or     DWORD PTR [rdx+rsi*1],esp
  400924:	33 38                	xor    edi,DWORD PTR [rax]
  400926:	2c 39                	sub    al,0x39
  400928:	34 38                	xor    al,0x38
  40092a:	0a 41 75             	or     al,BYTE PTR [rcx+0x75]
  40092d:	67 75 73             	addr32 jne 4009a3 <_IO_stdin_used+0x1d3>
  400930:	74 09                	je     40093b <_IO_stdin_used+0x16b>
  400932:	09 32                	or     DWORD PTR [rdx],esi
  400934:	30 31                	xor    BYTE PTR [rcx],dh
  400936:	38 09                	cmp    BYTE PTR [rcx],cl
  400938:	09 24 32             	or     DWORD PTR [rdx+rsi*1],esp
  40093b:	33 34 2c             	xor    esi,DWORD PTR [rsp+rbp*1]
  40093e:	32 30                	xor    dh,BYTE PTR [rax]
  400940:	39 0a                	cmp    DWORD PTR [rdx],ecx
  400942:	53                   	push   rbx
  400943:	65 70 74             	gs jo  4009ba <_IO_stdin_used+0x1ea>
  400946:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  400948:	62                   	(bad)  {k1}
  400949:	65 72 09             	gs jb  400955 <_IO_stdin_used+0x185>
  40094c:	32 30                	xor    dh,BYTE PTR [rax]
  40094e:	31 38                	xor    DWORD PTR [rax],edi
  400950:	09 09                	or     DWORD PTR [rcx],ecx
  400952:	24 31                	and    al,0x31
  400954:	33 32                	xor    esi,DWORD PTR [rdx]
  400956:	2c 38                	sub    al,0x38
  400958:	33 37                	xor    esi,DWORD PTR [rdi]
  40095a:	0a 4f 63             	or     cl,BYTE PTR [rdi+0x63]
  40095d:	74 6f                	je     4009ce <__GNU_EH_FRAME_HDR+0xa>
  40095f:	62                   	(bad)  {k1}
  400960:	65 72 09             	gs jb  40096c <_IO_stdin_used+0x19c>
  400963:	09 32                	or     DWORD PTR [rdx],esi
  400965:	30 31                	xor    BYTE PTR [rcx],dh
  400967:	38 09                	cmp    BYTE PTR [rcx],cl
  400969:	09 24 32             	or     DWORD PTR [rdx+rsi*1],esp
  40096c:	33 37                	xor    esi,DWORD PTR [rdi]
  40096e:	2c 33                	sub    al,0x33
  400970:	38 32                	cmp    BYTE PTR [rdx],dh
  400972:	0a 4e 6f             	or     cl,BYTE PTR [rsi+0x6f]
  400975:	76 65                	jbe    4009dc <__GNU_EH_FRAME_HDR+0x18>
  400977:	6d                   	ins    DWORD PTR es:[rdi],dx
  400978:	62                   	(bad)  {k1}
  400979:	65 72 09             	gs jb  400985 <_IO_stdin_used+0x1b5>
  40097c:	32 30                	xor    dh,BYTE PTR [rax]
  40097e:	31 38                	xor    DWORD PTR [rax],edi
  400980:	09 09                	or     DWORD PTR [rcx],ecx
  400982:	24 32                	and    al,0x32
  400984:	38 31                	cmp    BYTE PTR [rcx],dh
  400986:	2c 33                	sub    al,0x33
  400988:	38 37                	cmp    BYTE PTR [rdi],dh
  40098a:	0a 44 65 63          	or     al,BYTE PTR [rbp+riz*2+0x63]
  40098e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  400990:	62                   	(bad)  {k1}
  400991:	65 72 09             	gs jb  40099d <_IO_stdin_used+0x1cd>
  400994:	32 30                	xor    dh,BYTE PTR [rax]
  400996:	31 38                	xor    DWORD PTR [rax],edi
  400998:	09 09                	or     DWORD PTR [rcx],ecx
  40099a:	24 32                	and    al,0x32
  40099c:	32 38                	xor    bh,BYTE PTR [rax]
  40099e:	2c 31                	sub    al,0x31
  4009a0:	38 39                	cmp    BYTE PTR [rcx],bh
  4009a2:	00 53 6f             	add    BYTE PTR [rbx+0x6f],dl
  4009a5:	72 72                	jb     400a19 <__GNU_EH_FRAME_HDR+0x55>
  4009a7:	79 2c                	jns    4009d5 <__GNU_EH_FRAME_HDR+0x11>
  4009a9:	20 70 61             	and    BYTE PTR [rax+0x61],dh
  4009ac:	73 73                	jae    400a21 <__GNU_EH_FRAME_HDR+0x5d>
  4009ae:	77 6f                	ja     400a1f <__GNU_EH_FRAME_HDR+0x5b>
  4009b0:	72 64                	jb     400a16 <__GNU_EH_FRAME_HDR+0x52>
  4009b2:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
  4009b5:	63 6f 72             	movsxd ebp,DWORD PTR [rdi+0x72]
  4009b8:	72 65                	jb     400a1f <__GNU_EH_FRAME_HDR+0x5b>
  4009ba:	63 74 2e 2e          	movsxd esi,DWORD PTR [rsi+rbp*1+0x2e]
  4009be:	2e                   	cs
  4009bf:	2e                   	cs
	...

Disassembly of section .eh_frame_hdr:

00000000004009c4 <__GNU_EH_FRAME_HDR>:
  4009c4:	01 1b                	add    DWORD PTR [rbx],ebx
  4009c6:	03 3b                	add    edi,DWORD PTR [rbx]
  4009c8:	30 00                	xor    BYTE PTR [rax],al
  4009ca:	00 00                	add    BYTE PTR [rax],al
  4009cc:	05 00 00 00 0c       	add    eax,0xc000000
  4009d1:	fb                   	sti    
  4009d2:	ff                   	(bad)  
  4009d3:	ff                   	(bad)  
  4009d4:	7c 00                	jl     4009d6 <__GNU_EH_FRAME_HDR+0x12>
  4009d6:	00 00                	add    BYTE PTR [rax],al
  4009d8:	8c fb                	mov    ebx,?
  4009da:	ff                   	(bad)  
  4009db:	ff 4c 00 00          	dec    DWORD PTR [rax+rax*1+0x0]
  4009df:	00 82 fc ff ff a4    	add    BYTE PTR [rdx-0x5b000004],al
  4009e5:	00 00                	add    BYTE PTR [rax],al
  4009e7:	00 8c fd ff ff c4 00 	add    BYTE PTR [rbp+rdi*8+0xc4ffff],cl
  4009ee:	00 00                	add    BYTE PTR [rax],al
  4009f0:	fc                   	cld    
  4009f1:	fd                   	std    
  4009f2:	ff                   	(bad)  
  4009f3:	ff 0c 01             	dec    DWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

00000000004009f8 <__FRAME_END__-0xf0>:
  4009f8:	14 00                	adc    al,0x0
  4009fa:	00 00                	add    BYTE PTR [rax],al
  4009fc:	00 00                	add    BYTE PTR [rax],al
  4009fe:	00 00                	add    BYTE PTR [rax],al
  400a00:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400a03:	00 01                	add    BYTE PTR [rcx],al
  400a05:	78 10                	js     400a17 <__GNU_EH_FRAME_HDR+0x53>
  400a07:	01 1b                	add    DWORD PTR [rbx],ebx
  400a09:	0c 07                	or     al,0x7
  400a0b:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  400a11:	00 00                	add    BYTE PTR [rax],al
  400a13:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400a16:	00 00                	add    BYTE PTR [rax],al
  400a18:	38 fb                	cmp    bl,bh
  400a1a:	ff                   	(bad)  
  400a1b:	ff 2a                	jmp    FWORD PTR [rdx]
	...
  400a25:	00 00                	add    BYTE PTR [rax],al
  400a27:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  400a2a:	00 00                	add    BYTE PTR [rax],al
  400a2c:	00 00                	add    BYTE PTR [rax],al
  400a2e:	00 00                	add    BYTE PTR [rax],al
  400a30:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400a33:	00 01                	add    BYTE PTR [rcx],al
  400a35:	78 10                	js     400a47 <__GNU_EH_FRAME_HDR+0x83>
  400a37:	01 1b                	add    DWORD PTR [rbx],ebx
  400a39:	0c 07                	or     al,0x7
  400a3b:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  400a41:	00 00                	add    BYTE PTR [rax],al
  400a43:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400a46:	00 00                	add    BYTE PTR [rax],al
  400a48:	88 fa                	mov    dl,bh
  400a4a:	ff                   	(bad)  
  400a4b:	ff 70 00             	push   QWORD PTR [rax+0x0]
  400a4e:	00 00                	add    BYTE PTR [rax],al
  400a50:	00 0e                	add    BYTE PTR [rsi],cl
  400a52:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  400a55:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  400a58:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  400a5b:	80 00 3f             	add    BYTE PTR [rax],0x3f
  400a5e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  400a60:	2a 33                	sub    dh,BYTE PTR [rbx]
  400a62:	24 22                	and    al,0x22
  400a64:	00 00                	add    BYTE PTR [rax],al
  400a66:	00 00                	add    BYTE PTR [rax],al
  400a68:	1c 00                	sbb    al,0x0
  400a6a:	00 00                	add    BYTE PTR [rax],al
  400a6c:	44 00 00             	add    BYTE PTR [rax],r8b
  400a6f:	00 d6                	add    dh,dl
  400a71:	fb                   	sti    
  400a72:	ff                   	(bad)  
  400a73:	ff 06                	inc    DWORD PTR [rsi]
  400a75:	01 00                	add    DWORD PTR [rax],eax
  400a77:	00 00                	add    BYTE PTR [rax],al
  400a79:	41 0e                	rex.B (bad) 
  400a7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400a81:	03 01                	add    eax,DWORD PTR [rcx]
  400a83:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
  400a86:	08 00                	or     BYTE PTR [rax],al
  400a88:	44 00 00             	add    BYTE PTR [rax],r8b
  400a8b:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
  400a8f:	00 c0                	add    al,al
  400a91:	fc                   	cld    
  400a92:	ff                   	(bad)  
  400a93:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  400a96:	00 00                	add    BYTE PTR [rax],al
  400a98:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  400a9b:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
  400aa1:	8e 03                	mov    es,WORD PTR [rbx]
  400aa3:	45 0e                	rex.RB (bad) 
  400aa5:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
  400aab:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff867018f9 <_end+0xffffffff86100899>
  400ab1:	06                   	(bad)  
  400ab2:	48 0e                	rex.W (bad) 
  400ab4:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  400aba:	72 0e                	jb     400aca <__GNU_EH_FRAME_HDR+0x106>
  400abc:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  400abf:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  400ac2:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  400ac5:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  400ac8:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  400acb:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  400ace:	08 00                	or     BYTE PTR [rax],al
  400ad0:	14 00                	adc    al,0x0
  400ad2:	00 00                	add    BYTE PTR [rax],al
  400ad4:	ac                   	lods   al,BYTE PTR ds:[rsi]
  400ad5:	00 00                	add    BYTE PTR [rax],al
  400ad7:	00 e8                	add    al,ch
  400ad9:	fc                   	cld    
  400ada:	ff                   	(bad)  
  400adb:	ff 02                	inc    DWORD PTR [rdx]
	...

0000000000400ae8 <__FRAME_END__>:
  400ae8:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	20 06                	and    BYTE PTR [rsi],al
  600e12:	40 00 00             	add    BYTE PTR [rax],al
  600e15:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	00 06                	add    BYTE PTR [rsi],al
  600e1a:	40 00 00             	add    BYTE PTR [rax],al
  600e1d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    DWORD PTR [rax],eax
  600e2a:	00 00                	add    BYTE PTR [rax],al
  600e2c:	00 00                	add    BYTE PTR [rax],al
  600e2e:	00 00                	add    BYTE PTR [rax],al
  600e30:	01 00                	add    DWORD PTR [rax],eax
  600e32:	00 00                	add    BYTE PTR [rax],al
  600e34:	00 00                	add    BYTE PTR [rax],al
  600e36:	00 00                	add    BYTE PTR [rax],al
  600e38:	0c 00                	or     al,0x0
  600e3a:	00 00                	add    BYTE PTR [rax],al
  600e3c:	00 00                	add    BYTE PTR [rax],al
  600e3e:	00 00                	add    BYTE PTR [rax],al
  600e40:	a8 04                	test   al,0x4
  600e42:	40 00 00             	add    BYTE PTR [rax],al
  600e45:	00 00                	add    BYTE PTR [rax],al
  600e47:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    BYTE PTR [rax],al
  600e4f:	00 c4                	add    ah,al
  600e51:	07                   	(bad)  
  600e52:	40 00 00             	add    BYTE PTR [rax],al
  600e55:	00 00                	add    BYTE PTR [rax],al
  600e57:	00 19                	add    BYTE PTR [rcx],bl
  600e59:	00 00                	add    BYTE PTR [rax],al
  600e5b:	00 00                	add    BYTE PTR [rax],al
  600e5d:	00 00                	add    BYTE PTR [rax],al
  600e5f:	00 10                	add    BYTE PTR [rax],dl
  600e61:	0e                   	(bad)  
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    BYTE PTR [rax],al
  600e65:	00 00                	add    BYTE PTR [rax],al
  600e67:	00 1b                	add    BYTE PTR [rbx],bl
  600e69:	00 00                	add    BYTE PTR [rax],al
  600e6b:	00 00                	add    BYTE PTR [rax],al
  600e6d:	00 00                	add    BYTE PTR [rax],al
  600e6f:	00 08                	add    BYTE PTR [rax],cl
  600e71:	00 00                	add    BYTE PTR [rax],al
  600e73:	00 00                	add    BYTE PTR [rax],al
  600e75:	00 00                	add    BYTE PTR [rax],al
  600e77:	00 1a                	add    BYTE PTR [rdx],bl
  600e79:	00 00                	add    BYTE PTR [rax],al
  600e7b:	00 00                	add    BYTE PTR [rax],al
  600e7d:	00 00                	add    BYTE PTR [rax],al
  600e7f:	00 18                	add    BYTE PTR [rax],bl
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    BYTE PTR [rax],al
  600e85:	00 00                	add    BYTE PTR [rax],al
  600e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  600e8a:	00 00                	add    BYTE PTR [rax],al
  600e8c:	00 00                	add    BYTE PTR [rax],al
  600e8e:	00 00                	add    BYTE PTR [rax],al
  600e90:	08 00                	or     BYTE PTR [rax],al
  600e92:	00 00                	add    BYTE PTR [rax],al
  600e94:	00 00                	add    BYTE PTR [rax],al
  600e96:	00 00                	add    BYTE PTR [rax],al
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600e9d:	00 00                	add    BYTE PTR [rax],al
  600e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  600ea5:	00 00                	add    BYTE PTR [rax],al
  600ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    BYTE PTR [rax],al
  600eaf:	00 78 03             	add    BYTE PTR [rax+0x3],bh
  600eb2:	40 00 00             	add    BYTE PTR [rax],al
  600eb5:	00 00                	add    BYTE PTR [rax],al
  600eb7:	00 06                	add    BYTE PTR [rsi],al
  600eb9:	00 00                	add    BYTE PTR [rax],al
  600ebb:	00 00                	add    BYTE PTR [rax],al
  600ebd:	00 00                	add    BYTE PTR [rax],al
  600ebf:	00 b8 02 40 00 00    	add    BYTE PTR [rax+0x4002],bh
  600ec5:	00 00                	add    BYTE PTR [rax],al
  600ec7:	00 0a                	add    BYTE PTR [rdx],cl
  600ec9:	00 00                	add    BYTE PTR [rax],al
  600ecb:	00 00                	add    BYTE PTR [rax],al
  600ecd:	00 00                	add    BYTE PTR [rax],al
  600ecf:	00 58 00             	add    BYTE PTR [rax+0x0],bl
  600ed2:	00 00                	add    BYTE PTR [rax],al
  600ed4:	00 00                	add    BYTE PTR [rax],al
  600ed6:	00 00                	add    BYTE PTR [rax],al
  600ed8:	0b 00                	or     eax,DWORD PTR [rax]
  600eda:	00 00                	add    BYTE PTR [rax],al
  600edc:	00 00                	add    BYTE PTR [rax],al
  600ede:	00 00                	add    BYTE PTR [rax],al
  600ee0:	18 00                	sbb    BYTE PTR [rax],al
  600ee2:	00 00                	add    BYTE PTR [rax],al
  600ee4:	00 00                	add    BYTE PTR [rax],al
  600ee6:	00 00                	add    BYTE PTR [rax],al
  600ee8:	15 00 00 00 00       	adc    eax,0x0
	...
  600ef5:	00 00                	add    BYTE PTR [rax],al
  600ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  600f01:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  600f04:	00 00                	add    BYTE PTR [rax],al
  600f06:	00 00                	add    BYTE PTR [rax],al
  600f08:	02 00                	add    al,BYTE PTR [rax]
  600f0a:	00 00                	add    BYTE PTR [rax],al
  600f0c:	00 00                	add    BYTE PTR [rax],al
  600f0e:	00 00                	add    BYTE PTR [rax],al
  600f10:	90                   	nop
  600f11:	00 00                	add    BYTE PTR [rax],al
  600f13:	00 00                	add    BYTE PTR [rax],al
  600f15:	00 00                	add    BYTE PTR [rax],al
  600f17:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  600f1a:	00 00                	add    BYTE PTR [rax],al
  600f1c:	00 00                	add    BYTE PTR [rax],al
  600f1e:	00 00                	add    BYTE PTR [rax],al
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    BYTE PTR [rax],al
  600f23:	00 00                	add    BYTE PTR [rax],al
  600f25:	00 00                	add    BYTE PTR [rax],al
  600f27:	00 17                	add    BYTE PTR [rdi],dl
  600f29:	00 00                	add    BYTE PTR [rax],al
  600f2b:	00 00                	add    BYTE PTR [rax],al
  600f2d:	00 00                	add    BYTE PTR [rax],al
  600f2f:	00 18                	add    BYTE PTR [rax],bl
  600f31:	04 40                	add    al,0x40
  600f33:	00 00                	add    BYTE PTR [rax],al
  600f35:	00 00                	add    BYTE PTR [rax],al
  600f37:	00 07                	add    BYTE PTR [rdi],al
	...
  600f41:	04 40                	add    al,0x40
  600f43:	00 00                	add    BYTE PTR [rax],al
  600f45:	00 00                	add    BYTE PTR [rax],al
  600f47:	00 08                	add    BYTE PTR [rax],cl
  600f49:	00 00                	add    BYTE PTR [rax],al
  600f4b:	00 00                	add    BYTE PTR [rax],al
  600f4d:	00 00                	add    BYTE PTR [rax],al
  600f4f:	00 18                	add    BYTE PTR [rax],bl
  600f51:	00 00                	add    BYTE PTR [rax],al
  600f53:	00 00                	add    BYTE PTR [rax],al
  600f55:	00 00                	add    BYTE PTR [rax],al
  600f57:	00 09                	add    BYTE PTR [rcx],cl
  600f59:	00 00                	add    BYTE PTR [rax],al
  600f5b:	00 00                	add    BYTE PTR [rax],al
  600f5d:	00 00                	add    BYTE PTR [rax],al
  600f5f:	00 18                	add    BYTE PTR [rax],bl
  600f61:	00 00                	add    BYTE PTR [rax],al
  600f63:	00 00                	add    BYTE PTR [rax],al
  600f65:	00 00                	add    BYTE PTR [rax],al
  600f67:	00 fe                	add    dh,bh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f6d:	00 00                	add    BYTE PTR [rax],al
  600f6f:	00 e0                	add    al,ah
  600f71:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600f74:	00 00                	add    BYTE PTR [rax],al
  600f76:	00 00                	add    BYTE PTR [rax],al
  600f78:	ff                   	(bad)  
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f7d:	00 00                	add    BYTE PTR [rax],al
  600f7f:	00 01                	add    BYTE PTR [rcx],al
  600f81:	00 00                	add    BYTE PTR [rax],al
  600f83:	00 00                	add    BYTE PTR [rax],al
  600f85:	00 00                	add    BYTE PTR [rax],al
  600f87:	00 f0                	add    al,dh
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f8d:	00 00                	add    BYTE PTR [rax],al
  600f8f:	00 d0                	add    al,dl
  600f91:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    BYTE PTR [rsi],cl
  601002:	60                   	(bad)  
	...
  601017:	00 e6                	add    dh,ah
  601019:	04 40                	add    al,0x40
  60101b:	00 00                	add    BYTE PTR [rax],al
  60101d:	00 00                	add    BYTE PTR [rax],al
  60101f:	00 f6                	add    dh,dh
  601021:	04 40                	add    al,0x40
  601023:	00 00                	add    BYTE PTR [rax],al
  601025:	00 00                	add    BYTE PTR [rax],al
  601027:	00 06                	add    BYTE PTR [rsi],al
  601029:	05 40 00 00 00       	add    eax,0x40
  60102e:	00 00                	add    BYTE PTR [rax],al
  601030:	16                   	(bad)  
  601031:	05 40 00 00 00       	add    eax,0x40
  601036:	00 00                	add    BYTE PTR [rax],al
  601038:	26 05 40 00 00 00    	es add eax,0x40
  60103e:	00 00                	add    BYTE PTR [rax],al
  601040:	36 05 40 00 00 00    	ss add eax,0x40
	...

Disassembly of section .data:

0000000000601048 <__data_start>:
	...

0000000000601050 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601058 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x400430>
   a:	74 75                	je     81 <_init-0x400427>
   c:	20 35 2e 34 2e 30    	and    BYTE PTR [rip+0x302e342e],dh        # 302e3440 <_end+0x2fce23e0>
  12:	2d 36 75 62 75       	sub    eax,0x75627536
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <_init-0x400419>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	36 2e 30 34 2e       	ss xor BYTE PTR cs:[rsi+rbp*1],dh
  22:	31 31                	xor    DWORD PTR [rcx],esi
  24:	29 20                	sub    DWORD PTR [rax],esp
  26:	35 2e 34 2e 30       	xor    eax,0x302e342e
  2b:	20 32                	and    BYTE PTR [rdx],dh
  2d:	30 31                	xor    BYTE PTR [rcx],dh
  2f:	36 30 36             	xor    BYTE PTR ss:[rsi],dh
  32:	30 39                	xor    BYTE PTR [rcx],bh
	...


